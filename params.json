{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"The goal of django-deployer is to minimize the effort to deploy a Django app to any of the popular PaaS providers. By asking a series of questions about the Django app, we can generate a generic deploy.yml file that can be consumed by any of the PaaS providers. Each PaaS provider can translate these requirements into a configuration that will work to deploy to their PaaS.\r\n\r\n### Resources\r\n\r\nThis is not a new problem. A collection of other deployment tools that we found when researching this project:\r\n\r\n* https://github.com/duointeractive/django-fabtastic\r\n* https://github.com/gcollazo/Fabulous\r\n* https://github.com/reverie/django-fabfile\r\n* https://github.com/tswicegood/django-on-vagrant\r\n* https://github.com/webengineer/django-fabfile\r\n* https://github.com/alexisbellido/The-Django-gunicorn-fabfile-project\r\n* https://github.com/akumria/django-paas\r\n* http://bits.btubbs.com/silk-deployment\r\n\r\n### PaaS providers\r\n\r\nHere are instructions for how to deploy Django from each of the PaaS providers:\r\n\r\nbuild \"consumers\" that read this file and output the appropriate files/dirs to be able to deploy to:\r\n* [Heroku](https://devcenter.heroku.com/articles/django)\r\n* [DotCloud](http://docs.dotcloud.com/0.4/tutorials/python/django/)\r\n* [Gondor.io](https://gondor.io/support/django/setup/)\r\n* [OpenShift](https://github.com/openshift/django-example)\r\n* [Stackato](http://docs.stackato.com/deploy/languages/python/django.html)\r\n* [Amazon Elastic Beanstalk](http://aws.typepad.com/aws/2012/08/announcing-aws-elastic-beanstalk-support-for-python-and-seamless-database-integration.html)\r\n* [Google App Engine](https://developers.google.com/appengine/docs/python/cloud-sql/django)\r\n\r\n\r\n### Development\r\n\r\nIf you want to contribute to django-deployer, here is how you can check it out.\r\n\r\n```\r\n$ git clone git://github.com/natea/django-deployer.git\r\n$ cd django-deployer\r\n$ ...\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","name":"django-deployer","tagline":"Generic Deployment tool for Django that supports popular PaaS providers such as Heroku, Dotcloud, Stackato, OpenShift, Gondor","google":""}